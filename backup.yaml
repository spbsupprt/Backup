---
- hosts: all
  become: true
  tasks:
    - name: install_borg
      apt:
       name: borgbackup
       update_cache: yes
       state: present
    
    - name: Create user borg
      user:
        name: borg
        shell: /bin/bash
        create_home: yes
        state: present
        comment: "Backup User"
      when: ansible_facts['nodename'] == "backup"

    - name: setup dir /var/backup
      file:
        path: /var/backup
        state: directory
        owner: borg
        group: borg
        mode: '0755'
        recurse: yes
      when: ansible_facts['nodename'] == "backup"

    - name: clean dir /var/backup 
      shell:
        cmd: "rm -rf /var/backup/* /var/backup/.* 2>/dev/null || true"
      when: ansible_facts['nodename'] == "backup"
      
    - name: SSH  Disable confirmation 
      ansible.builtin.copy:
        src: templates//disable_kh.conf
        dest: /etc/ssh/ssh_config.d/disable_check.conf
        owner: root
        group: root
        mode: '0644'
      systemd:
        name: ssh.service
        state: restarted
      when: ansible_facts['nodename'] == "client"

    - name: Generate SSH key for client
      community.crypto.openssh_keypair:
        path: root/.ssh/id_ed25519
        type:  "ed25519"
        owner: "root"
        group: "root"
        mode: '0600'
       when: ansible_facts['nodename'] == "client"

    - name: Get public key from client
      ansible.builtin.slurp:
        src: root/.ssh/id_ed25519.pub
        register: public_key
      when: ansible_facts['nodename'] == "client"
       
    - name: Create directory (if none)
      file:
        path: /home/borg/.ssh"
        state: directory
        mode: 0755
      when: ansible_facts['nodename'] == "backup"

    - name: Add public key client into authorized_keys in backup host
      ansible.posix.authorized_key:
        user: borg  
        key: "{{ public_key.content | b64decode }}"
        state: present
      when: ansible_facts['nodename'] == "backup"
    
    - name: Repository init
      ansible.builtin.command:
        cmd: "borg init --encryption=repokey borg@192.168.122.11:/var/backup"
        creates: "borg@192.168.122.11:/var/backup/README"  # Check that repository created
      environment:
        BORG_PASSPHRASE: "Otus1234"
      when: ansible_facts['nodename'] == "client"
    
    - name: Create service
      template: 
        src: templates/borg-backup.service
        dest: /etc/systemd/system/borg-backup.service
        mode: 0644
      when: ansible_facts['nodename'] == "client"

    - name: Create timer
      template:
        src: templates/borg-backup.timer
        dest: /etc/systemd/system/borg-backup.timer
        mode: 0644
      when: ansible_facts['nodename'] == "client"

    - name: run and enable timer
      systemd:
        name: borg-backup.timer
        state: started
        enabled: true
        daemon_reload: true
      when: ansible_facts['nodename'] == "client"

    - name: run backup 
      systemd:
        name: borg-backup.service
        state: started
        enabled: true
      when: ansible_facts['nodename'] == "client"
...
